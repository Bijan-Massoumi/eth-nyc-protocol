/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ShareSample, ShareSampleInterface } from "../ShareSample";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_subscriptionRate",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InsufficientSubscriptionPool",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAlterPriceValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAlterSubscriptionPoolValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAssessmentFee",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeCollected",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subscriptionPoolRemaining",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidationStartedAt",
        type: "uint256",
      },
    ],
    name: "FeeCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isBuy",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shareAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    name: "Trade",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyShares",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseSubscriptionPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getBuyPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMinimumSubPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getSellPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getSubscriptionPoolRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseSubscriptionPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellShares",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAccumulatedFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526103e860035561271060045561271060055534801561002257600080fd5b50604051610e66380380610e6683398101604081905261004191610097565b600191909155600a80546001600160a01b039384166001600160a01b031991821617909155600b80549390921692169190911790556100d3565b80516001600160a01b038116811461009257600080fd5b919050565b6000806000606084860312156100ac57600080fd5b6100b58461007b565b9250602084015191506100ca6040850161007b565b90509250925092565b610d84806100e26000396000f3fe6080604052600436106100c25760003560e01c80636c9c2faf1161007f578063ba730e5311610059578063ba730e53146101e1578063c4d676a1146100c7578063d1a93d1814610201578063eb91d37e1461021457600080fd5b80636c9c2faf1461017657806370a082311461018b5780637a2578c7146101c157600080fd5b806301814e14146100c757806308d4db14146100e857806322a295a81461011a5780632e185ec71461012e5780634ba8ae81146101435780635cf4ee9114610156575b600080fd5b3480156100d357600080fd5b506100e66100e2366004610c3f565b5050565b005b3480156100f457600080fd5b50610108610103366004610c61565b610229565b60405190815260200160405180910390f35b34801561012657600080fd5b506000610108565b34801561013a57600080fd5b506100e661023d565b6100e6610151366004610c61565b610342565b34801561016257600080fd5b50610108610171366004610c3f565b6105b7565b34801561018257600080fd5b50600854610108565b34801561019757600080fd5b506101086101a6366004610c7a565b6001600160a01b031660009081526007602052604090205490565b3480156101cd57600080fd5b506101086101dc366004610c7a565b6106d8565b3480156101ed57600080fd5b506101086101fc366004610c61565b610710565b6100e661020f366004610c61565b610723565b34801561022057600080fd5b50610108610a4d565b6000610237600854836105b7565b92915050565b6000610248336106d8565b9050600081116102935760405162461bcd60e51b8152602060048201526011602482015270125b9cdd59999a58da595b9d081c1bdbdb607a1b60448201526064015b60405180910390fd5b604051600090339083908381818185875af1925050503d80600081146102d5576040519150601f19603f3d011682016040523d82523d6000602084013e6102da565b606091505b50509050806103225760405162461bcd60e51b8152602060048201526014602482015273556e61626c6520746f2073656e642066756e647360601b604482015260640161028a565b505033600090815260208190526040812081815542600190910155600955565b80600854116103935760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742073656c6c20746865206c617374207368617265000000000000604482015260640161028a565b60006103ac826008546103a69190610cc0565b836105b7565b336000908152600760205260409020549091508211156104045760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742073686172657360681b604482015260640161028a565b336000818152600760205260408120549091829161042a9190610425610a4d565b610a61565b33600090815260076020526040902054919350915061044a908590610cc0565b33600090815260076020526040902055600854610468908590610cc0565b6008553360009081526020819052604090208281554260019091015580600960008282546104969190610cd3565b9091555050600b546008547ff7dd8a134438de4c59401760e24ef5c6cc9c74583b2b022085697f3021e597689133916001600160a01b0390911690600090889088906104e3908390610cc0565b604080516001600160a01b039788168152959096166020860152921515848601526060840191909152608083015260a082015290519081900360c00190a1604051600090339085908381818185875af1925050503d8060008114610563576040519150601f19603f3d011682016040523d82523d6000602084013e610568565b606091505b50509050806105b05760405162461bcd60e51b8152602060048201526014602482015273556e61626c6520746f2073656e642066756e647360601b604482015260640161028a565b5050505050565b60008083156106125760066105cd600186610cc0565b6105d8906002610ce6565b6105e3906001610cd3565b856105ef600182610cc0565b6105f99190610ce6565b6106039190610ce6565b61060d9190610cfd565b610615565b60005b90506000841580156106275750836001145b61069c57600684610639600188610cc0565b6106439190610cd3565b61064e906002610ce6565b610659906001610cd3565b6106638688610cd3565b8661066f60018a610cc0565b6106799190610cd3565b6106839190610ce6565b61068d9190610ce6565b6106979190610cfd565b61069f565b60005b905060006106ad8383610cc0565b9050613e806106c482670de0b6b3a7640000610ce6565b6106ce9190610cfd565b9695505050505050565b6001600160a01b0381166000908152600760205260408120546008548291610708918591906104259060016105b7565b509392505050565b6000610237826008546103a69190610cc0565b6000600854118061073e5750600b546001600160a01b031633145b6107a35760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79207468652073686172657327207375626a6563742063616e2062757960448201526f2074686520666972737420736861726560801b606482015260840161028a565b60006107b1600854836105b7565b905060006107d56107d0846008546107c99190610cd3565b60016105b7565b610ad6565b9050813410156108205760405162461bcd60e51b8152602060048201526016602482015275496e75736666696369656e74206e667420707269636560501b604482015260640161028a565b600061082c8334610cc0565b3360008181526007602052604081205492935091829161084e91610425610a4d565b9092509050600061085f8385610cd3565b90508481116108a75760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b604482015260640161028a565b81600960008282546108b99190610cd3565b9091555061096e90506108ca610a4d565b60408051606081018252428152602081019283526001805492820192835260028054918201815560005290517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace60039092029182015591517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf830155517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad090910155565b33600090815260076020526040902054610989908890610cd3565b336000908152600760205260409020556008546109a7908890610cd3565b600890815533600081815260208190526040902083815542600191820155600b5492547ff7dd8a134438de4c59401760e24ef5c6cc9c74583b2b022085697f3021e59768936001600160a01b031691908b908b90610a06908390610cd3565b604080516001600160a01b039788168152959096166020860152921515848601526060840191909152608083015260a082015290519081900360c00190a150505050505050565b6000610a5c60085460016105b7565b905090565b6001600160a01b0383166000908152602081815260408083208151808301909252805480835260019091015492820183905283928391610aa391879189610af3565b82519091508110610abb57600093509150610ace9050565b8151610ac8908290610cc0565b93509150505b935093915050565b600061271060035483610ae99190610ce6565b6102379190610cfd565b6000808085815b600254811015610bcb57600060028281548110610b1957610b19610d1f565b9060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505090508281600001511115610bb8576000610b7882602001518584600001518560400151610bfc565b610b829089610ce6565b9050610b8e8187610cd3565b955088861115610ba657859650505050505050610bf4565b81519350610bb48186610cd3565b9450505b5080610bc381610d35565b915050610afa565b50610bda888242600154610bfc565b610be49086610ce6565b610bee9084610cd3565b93505050505b949350505050565b6000610c0e6301e13380612710610ce6565b610c188585610cc0565b610c228785610ce6565b610c2c9190610ce6565b610c369190610cfd565b95945050505050565b60008060408385031215610c5257600080fd5b50508035926020909101359150565b600060208284031215610c7357600080fd5b5035919050565b600060208284031215610c8c57600080fd5b81356001600160a01b0381168114610ca357600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561023757610237610caa565b8082018082111561023757610237610caa565b808202811582820484141761023757610237610caa565b600082610d1a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201610d4757610d47610caa565b506001019056fea2646970667358221220b3179ba0d549f5db46c206a337295450492d9b6b09d5e193f8fda80994d6cf8264736f6c63430008120033";

type ShareSampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShareSampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShareSample__factory extends ContractFactory {
  constructor(...args: ShareSampleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _withdrawAddress: string,
    _subscriptionRate: BigNumberish,
    owner: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ShareSample> {
    return super.deploy(
      _withdrawAddress,
      _subscriptionRate,
      owner,
      overrides || {}
    ) as Promise<ShareSample>;
  }
  override getDeployTransaction(
    _withdrawAddress: string,
    _subscriptionRate: BigNumberish,
    owner: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _withdrawAddress,
      _subscriptionRate,
      owner,
      overrides || {}
    );
  }
  override attach(address: string): ShareSample {
    return super.attach(address) as ShareSample;
  }
  override connect(signer: Signer): ShareSample__factory {
    return super.connect(signer) as ShareSample__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShareSampleInterface {
    return new utils.Interface(_abi) as ShareSampleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShareSample {
    return new Contract(address, _abi, signerOrProvider) as ShareSample;
  }
}
